name: Build and Release APK

on:
  push:
    tags:
      - 'v*' 

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Restore Android Keystore
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > app/release-key.jks
        
    - name: Build Signed APK
      run: |
        docker run --rm \
          -v $PWD:/application \
          -e KEYSTORE_PASSWORD="${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" \
          -e KEY_ALIAS="${{ secrets.ANDROID_KEY_ALIAS }}" \
          -e KEY_PASSWORD="${{ secrets.ANDROID_KEY_PASSWORD }}" \
          riderlty/vpoint-builder \
          gradle assembleRelease
          
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
      
    - name: Rename APK file
      run: |
        cd app/build/outputs/apk/release
        for file in *.apk; do
          if [[ "$file" == *"release"* ]]; then
            new_name="vPoint.${{ steps.date.outputs.date }}.apk"
            cp "$file" "/home/runner/work/vPointer/vPointer/app/$new_name"
            echo "new_apk_path=/home/runner/work/vPointer/vPointer/app/$new_name" >> $GITHUB_ENV
            echo "APK renamed to: $new_name"
            break
          fi
        done

    - name: Create GitHub release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: ${{ github.event.client_payload.tag}}
        title: ${{ github.event.client_payload.title}}
        prerelease: false
        files: ${{ env.new_apk_path }}
